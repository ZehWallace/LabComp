class A {
   private int n;
   public void set (int pn) {
      this.n = pn;
   }
   public int get () {
      return this.n;
   }
}
class B {
   public void set (int pn) {
      write (pn);
      super.set(pn);
      
   }
}
class Program {
   public B m (A a) {
      a.set(0);
      
      return new B();
   }
   public A p (int i) {
      if (i > 0){
         return new A();
      }
 else {
         return new B();
      }
   }
   public void run () {
      A a;
      
      B b;
      
      a = new A();
      b = new B();
      a = b;
      a.set(0);
      
      a = this.m(a);
      b = this.m(b);
      a = this.p(0);
   }
}
#include <malloc.h>
#include <stdlib.h>
#include <stdio.h>
/* define o tipo boolean */
typedef int boolean;
#define true 1
#define false 0
/* define um tipo Func que ´e um ponteiro para fun¸c~ao */ 
typedef void (*Func)();
typedef struct _ST_A {
   /* ponteiro para um vetor de métodos da classe */
   Func *vt; 
   int n;
}_class_A
void A_set(int pn){
   n = pn;
}
int A_get(){
   return n;
}
typedef struct _ST_B {
   /* ponteiro para um vetor de métodos da classe */
   Func *vt; 
}_class_B
void B_set(int pn){
   printf ("%d", pn);
   ;
   
}
typedef struct _ST_Program {
   /* ponteiro para um vetor de métodos da classe */
   Func *vt; 
}_class_Program
B Program_m(A a){
   ;
   
   return B;
}
A Program_p(int i){
   if ((i) >    0){
   }
 else {
   }
}
void Program_run(){
   A a;
   
   B b;
   
   a = A;
   b = B;
   a = b;
   ;
   
   a = ;
   b = ;
   a = ;
}
