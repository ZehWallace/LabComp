class Program {
   public void run () {
      String r;
      String s;
      
      r = "Ola";
      s = "Tudo bem?";
      if (( r == s) && ( r != s) && ( r == null) && ( null == r) && ( r == "Ola") && ( "Ola" == r) && ( r != null) && ( r != "Ola") && ( "Ola" != r) && ( "null" == null)){
         write ("impossivel");
      }
   }
}
#include <malloc.h>
#include <stdlib.h>
#include <stdio.h>
/* define o tipo boolean */
typedef int boolean;
#define true 1
#define false 0
/* define um tipo Func que ´e um ponteiro para fun¸c~ao */ 
typedef void (*Func)();
typedef struct _ST_Program {
   /* ponteiro para um vetor de métodos da classe */
   Func *vt; 
}_class_Program
void Program_run(){
   char * r;
   char * s;
   
   r = Ola;
   s = Tudo bem?;
   if (((((((((((r) == (s)   ) && ((r) != (s)   )) && ((r) ==    NULL   )) && (   NULL == (r)   )) && ((r) == Ola   )) && (Ola == (r)   )) && ((r) !=    NULL   )) && ((r) != Ola   )) && (Ola != (r)   )) && (null ==    NULL   )){
      printf ("%s", impossivel);
   }
}
// apenas os métodos públicos
Func VTclass_Program[] = { 
   (void (*) () ) _Program_run,
};

_class_Program *new_Program(){
   _class_Program *t;
   if((t = malloc(sizeof(_class_Program)))!=NULL)
      t->vt = VTclass_Program;
   return t;
}

