class A {
   private int i;
   public void put (int x, int y, boolean ok) {
      if (( x > y) && ok){
         this.i = 0;
      }
   }
   public int get () {
      return this.i;
   }
   public void set (int i) {
      this.i = i;
   }
}
class B {
   public void put (int a, int b, boolean c) {
      if (( ( a + b) < 1) && !c){
         write (0);
      }
   }
}
class Program {
   public void run () {
      B b;
      
      b = new B();
      b.put(1, 2, true);
      
   }
}
#include <malloc.h>
#include <stdlib.h>
#include <stdio.h>
/* define o tipo boolean */
typedef int boolean;
#define true 1
#define false 0
/* define um tipo Func que ´e um ponteiro para fun¸c~ao */ 
typedef void (*Func)();
typedef struct _ST_A {
   /* ponteiro para um vetor de métodos da classe */
   Func *vt; 
   int i;
}_class_A
void A_put(int x, int y, int ok){
   if (((x) > (y)   ) && (ok)){
   }
}
int A_get(){
   return i;
}
void A_set(int i){
   i = i;
}
typedef struct _ST_B {
   /* ponteiro para um vetor de métodos da classe */
   Func *vt; 
}_class_B
void B_put(int a, int b, int c){
   if ((((a) + (b)   ) <    1   ) && !c){
   }
}
typedef struct _ST_Program {
   /* ponteiro para um vetor de métodos da classe */
   Func *vt; 
}_class_Program
void Program_run(){
   B b;
   
   b = B;
   ;
   
}
