class A {
   private int n;
   public void set (int pn) {
      int n;
      
      this.n = pn;
   }
   public int put (int n, String set) {
      boolean put;
      
      this.n = n;
      return n;
   }
}
class Program {
   public void run () {
      A a;
      
      a = new A();
      a.set(0);
      
   }
}
#include <malloc.h>
#include <stdlib.h>
#include <stdio.h>
/* define o tipo boolean */
typedef int boolean;
#define true 1
#define false 0
/* define um tipo Func que ´e um ponteiro para fun¸c~ao */ 
typedef void (*Func)();
typedef struct _ST_A {
   /* ponteiro para um vetor de métodos da classe */
   Func *vt; 
   int n;
}_class_A
void A_set(int pn){
   int n;
   
   n = pn;
}
int A_put(int n, char * set){
   int put;
   
   n = n;
   return n;
}
// apenas os métodos públicos
Func VTclass_A[] = { 
   (void (*) () ) _A_set,
   (void (*) () ) _A_put,
};

_class_A *new_A(){
   _class_A *t;
   if((t = malloc(sizeof(_class_A)))!=NULL)
      t->vt = VTclass_A;
   return t;
}

typedef struct _ST_Program {
   /* ponteiro para um vetor de métodos da classe */
   Func *vt; 
}_class_Program
void Program_run(){
   A a;
   
   a = new_A();
   a.set(0);
   
}
// apenas os métodos públicos
Func VTclass_Program[] = { 
   (void (*) () ) _Program_run,
};

_class_Program *new_Program(){
   _class_Program *t;
   if((t = malloc(sizeof(_class_Program)))!=NULL)
      t->vt = VTclass_Program;
   return t;
}

